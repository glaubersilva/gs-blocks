{"version":3,"file":"controls/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AAEA;AAOAA,oEAAiB,CAAC,+CAAD,EAAkD;EAClEK,UAAU,EAAE,CADsD;EAElEC,KAAK,EAAE,4BAF2D;EAGlEC,IAAI,EAAE,sBAH4D;EAIlEC,QAAQ,EAAE,QAJwD;EAKlEC,UAAU,EAAE;IACXC,OAAO,EAAE;MACRC,IAAI,EAAE,OADE;MAERC,MAAM,EAAE,UAFA;MAGRC,QAAQ,EAAE;IAHF,CADE;IAMXC,SAAS,EAAE;MACVH,IAAI,EAAE,QADI;MAEVI,OAAO,EAAE;IAFC;EANA,CALsD;EAgBlEC,OAAO,EAAE;IACRP,UAAU,EAAE;MACXC,OAAO,EAAE,aADE;MAEXI,SAAS,EAAE;IAFA;EADJ,CAhByD;EAsBlEG,IAAI,EAAE,QAAmC;IAAA,IAAlC;MAAER,UAAF;MAAcS;IAAd,CAAkC;;IACxC,MAAMC,eAAe,GAAIC,UAAD,IAAgB;MACvCF,aAAa,CAAC;QAAER,OAAO,EAAEU;MAAX,CAAD,CAAb;IACA,CAFD;;IAIA,MAAMC,iBAAiB,GAAIC,YAAD,IAAkB;MAC3CJ,aAAa,CAAC;QACbJ,SAAS,EAAEQ,YAAY,KAAKC,SAAjB,GAA6B,MAA7B,GAAsCD;MADpC,CAAD,CAAb;IAGA,CAJD;;IAMA,OACC,yEAASrB,sEAAa,EAAtB,EAEE,kEAAC,kEAAD,QACC,kEAAC,qEAAD;MACC,KAAK,EAAEQ,UAAU,CAACK,SADnB;MAEC,QAAQ,EAAEO;IAFX,EADD,CAFF,EASC,kEAAC,6DAAD;MACC,SAAS,EAAEZ,UAAU,CAACe,SADvB;MAEC,KAAK,EAAE;QAAEC,SAAS,EAAEhB,UAAU,CAACK;MAAxB,CAFR;MAGC,OAAO,EAAC,GAHT;MAIC,QAAQ,EAAEK,eAJX;MAKC,KAAK,EAAEV,UAAU,CAACC;IALnB,EATD,CADD;EAmBA,CApDiE;EAqDlEgB,IAAI,EAAGC,KAAD,IAAW;IAChB,MAAMC,UAAU,GAAG3B,uEAAA,EAAnB;IAEA,OACC,yEAAS2B,UAAT,EACC,kEAAC,qEAAD;MACC,SAAS,EAAG,4BAA2BD,KAAK,CAAClB,UAAN,CAAiBK,SAAU,EADnE;MAEC,OAAO,EAAC,GAFT;MAGC,KAAK,EAAEa,KAAK,CAAClB,UAAN,CAAiBC;IAHzB,EADD,CADD;EASA;AAjEiE,CAAlD,CAAjB,C","sources":["webpack://gs-blocks/external window [\"wp\",\"blockEditor\"]","webpack://gs-blocks/external window [\"wp\",\"blocks\"]","webpack://gs-blocks/external window [\"wp\",\"element\"]","webpack://gs-blocks/webpack/bootstrap","webpack://gs-blocks/webpack/runtime/compat get default export","webpack://gs-blocks/webpack/runtime/define property getters","webpack://gs-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://gs-blocks/webpack/runtime/make namespace object","webpack://gs-blocks/./src/controls/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\n\nimport {\n\tuseBlockProps,\n\tRichText,\n\tAlignmentToolbar,\n\tBlockControls,\n} from '@wordpress/block-editor';\n\nregisterBlockType('gutenberg-examples/example-04-controls-esnext', {\n\tapiVersion: 2,\n\ttitle: 'Example: Controls (esnext)',\n\ticon: 'universal-access-alt',\n\tcategory: 'design',\n\tattributes: {\n\t\tcontent: {\n\t\t\ttype: 'array',\n\t\t\tsource: 'children',\n\t\t\tselector: 'p',\n\t\t},\n\t\talignment: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'none',\n\t\t},\n\t},\n\texample: {\n\t\tattributes: {\n\t\t\tcontent: 'Hello World',\n\t\t\talignment: 'right',\n\t\t},\n\t},\n\tedit: ({ attributes, setAttributes }) => {\n\t\tconst onChangeContent = (newContent) => {\n\t\t\tsetAttributes({ content: newContent });\n\t\t};\n\n\t\tconst onChangeAlignment = (newAlignment) => {\n\t\t\tsetAttributes({\n\t\t\t\talignment: newAlignment === undefined ? 'none' : newAlignment,\n\t\t\t});\n\t\t};\n\n\t\treturn (\n\t\t\t<div {...useBlockProps()}>\n\t\t\t\t{\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\t\tvalue={attributes.alignment}\n\t\t\t\t\t\t\tonChange={onChangeAlignment}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t}\n\t\t\t\t<RichText\n\t\t\t\t\tclassName={attributes.className}\n\t\t\t\t\tstyle={{ textAlign: attributes.alignment }}\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tonChange={onChangeContent}\n\t\t\t\t\tvalue={attributes.content}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\tsave: (props) => {\n\t\tconst blockProps = useBlockProps.save();\n\n\t\treturn (\n\t\t\t<div {...blockProps}>\n\t\t\t\t<RichText.Content\n\t\t\t\t\tclassName={`gutenberg-examples-align-${props.attributes.alignment}`}\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tvalue={props.attributes.content}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n});\n"],"names":["registerBlockType","useBlockProps","RichText","AlignmentToolbar","BlockControls","apiVersion","title","icon","category","attributes","content","type","source","selector","alignment","default","example","edit","setAttributes","onChangeContent","newContent","onChangeAlignment","newAlignment","undefined","className","textAlign","save","props","blockProps"],"sourceRoot":""}