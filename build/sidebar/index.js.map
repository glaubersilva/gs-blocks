{"version":3,"file":"sidebar/index.js","mappings":"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","sources":["webpack://gs-blocks/external window [\"wp\",\"blockEditor\"]","webpack://gs-blocks/external window [\"wp\",\"blocks\"]","webpack://gs-blocks/external window [\"wp\",\"components\"]","webpack://gs-blocks/external window [\"wp\",\"element\"]","webpack://gs-blocks/external window [\"wp\",\"i18n\"]","webpack://gs-blocks/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://gs-blocks/webpack/bootstrap","webpack://gs-blocks/webpack/runtime/compat get default export","webpack://gs-blocks/webpack/runtime/define property getters","webpack://gs-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://gs-blocks/webpack/runtime/make namespace object","webpack://gs-blocks/./src/sidebar/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { TextControl } from '@wordpress/components';\n \nimport {\n    useBlockProps,\n    ColorPalette,\n    InspectorControls,\n} from '@wordpress/block-editor';\n \nregisterBlockType( 'create-block/sidebar', {\n    apiVersion: 2,\n\ttitle: 'Sidebar',\n    icon: 'universal-access-alt',\n    category: 'design',\n    attributes: {\n        message: {\n            type: 'string',\n            source: 'text',\n            selector: 'div',\n            default: '', // empty default\n        },\n        bg_color: { type: 'string', default: '#000000' },\n        text_color: { type: 'string', default: '#ffffff' },\n    },\n    edit: ( { attributes, setAttributes } ) => {\n        const onChangeBGColor = ( hexColor ) => {\n            setAttributes( { bg_color: hexColor } );\n        };\n \n        const onChangeTextColor = ( hexColor ) => {\n            setAttributes( { text_color: hexColor } );\n        };\n \n        return (\n            <div { ...useBlockProps() }>\n                <InspectorControls key=\"setting\">\n                    <div id=\"sidebar-controls\">\n                        <fieldset>\n                            <legend className=\"blocks-base-control__label\">\n                                { __( 'Background color', 'sidebar' ) }\n                            </legend>\n                            <ColorPalette // Element Tag for Gutenberg standard colour selector\n                                onChange={ onChangeBGColor } // onChange event callback\n                            />\n                        </fieldset>\n                        <fieldset>\n                            <legend className=\"blocks-base-control__label\">\n                                { __( 'Text color', 'sidebar' ) }\n                            </legend>\n                            <ColorPalette // Element Tag for Gutenberg standard colour selector\n                                onChange={ onChangeTextColor } // onChange event callback\n                            />\n                        </fieldset>\n                    </div>\n                </InspectorControls>\n                <TextControl\n                    value={ attributes.message }\n                    onChange={ ( val ) => setAttributes( { message: val } ) }\n                    style={ {\n                        backgroundColor: attributes.bg_color,\n                        color: attributes.text_color,\n                    } }\n                />\n            </div>\n        );\n    },\n    save: ( { attributes } ) => {\n        return (\n            <div\n                { ...useBlockProps.save() }\n                style={ {\n                    backgroundColor: attributes.bg_color,\n                    color: attributes.text_color,\n                } }\n            >\n                { attributes.message }\n            </div>\n        );\n    },\n} );"],"names":["registerBlockType","__","TextControl","useBlockProps","ColorPalette","InspectorControls","apiVersion","title","icon","category","attributes","message","type","source","selector","default","bg_color","text_color","edit","setAttributes","onChangeBGColor","hexColor","onChangeTextColor","val","backgroundColor","color","save"],"sourceRoot":""}